{% set name = "pygeoprocessing" %}
{% set version = "2.4.9" %}
package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: ed7956c2496d2528ed05e555bb2bbfd6e30d439f652710d86e6e690613712011

build:
  number: 0
  # adding --no-deps to rely on conda-managed numpy, not what's in requirements.txt.
  script: {{ PYTHON }} -m pip install . -vv --no-deps

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython >=3                             # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
  host:
    - python
    - pip
    - cython >=3
    - numpy
    - setuptools
    - setuptools_scm
  run:
    - python
    - rtree >=0.8.3
    - scipy !=0.19.1,>=0.14.1
    - gdal >=3.0.4
    - shapely >=1.6.4
    - setuptools
    - importlib-metadata

test:
  requires:
    - pytest
  source_files:
    - tests
  imports:
    - pygeoprocessing
    - pygeoprocessing.routing
    - pygeoprocessing.multiprocessing
  commands:
    # Skipping a single test that's failing.  Pygeoprocessing shouldn't be testing GDAL functionality anyways.
    - pytest -vs tests -k "not test_create_raster_from_vector_extents_invalid_pixeltype"

about:
  home: https://github.com/natcap/pygeoprocessing
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: Raster, vector, and hydrological operations for GIS processing
  dev_url: https://github.com/natcap/pygeoprocessing

extra:
  recipe-maintainers:
    - dcdenu4
    - phargogh
